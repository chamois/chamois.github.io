<?xml version="1.0" encoding="UTF-8"?>
<RBCVersion>1.0.1</RBCVersion>

<Platform>EV3</Platform>

<CompilerMode>Real</CompilerMode>

<MenuLevel>Basic</MenuLevel>

<CompileAndDownload>NO</CompileAndDownload>

<NaturalLanguageFlag>True</NaturalLanguageFlag>

<DebuggerWindows></DebuggerWindows>

<Version>1.0.1</Version>

<ProgrammingBlock type="loop" loopType="RepeatForever"/>

<ProgrammingBlock type="functionCall" function="lineTrackLeft">
    <Parameters>
        <Parameter name="sensorName" type="base typedef" typeDef="tSensors">S3</Parameter>
        <Parameter name="threshold" type="short">50</Parameter>
        <Parameter name="speedPrimary" type="short">50</Parameter>
        <Parameter name="speedSecondary" type="short">0</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="end"/>

<RobotConfiguration>#pragma config(Sensor, S1,     touchSensor,    sensorEV3_Touch)
#pragma config(Sensor, S2,     gyroSensor,     sensorEV3_Gyro, modeEV3Gyro_RateAndAngle)
#pragma config(Sensor, S3,     colorSensor,    sensorEV3_Color, modeEV3Color_Color)
#pragma config(Sensor, S4,     sonarSensor,    sensorEV3_Ultrasonic)
#pragma config(Motor,  motorA,          armMotor,      tmotorEV3_Large, PIDControl, encoder)
#pragma config(Motor,  motorB,          leftMotor,     tmotorEV3_Large, PIDControl, driveLeft, encoder)
#pragma config(Motor,  motorC,          rightMotor,    tmotorEV3_Large, PIDControl, driveRight, encoder)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//
</RobotConfiguration>

<CSource>#pragma config(Sensor, S1,     touchSensor,    sensorEV3_Touch)
#pragma config(Sensor, S2,     gyroSensor,     sensorEV3_Gyro, modeEV3Gyro_RateAndAngle)
#pragma config(Sensor, S3,     colorSensor,    sensorEV3_Color, modeEV3Color_Color)
#pragma config(Sensor, S4,     sonarSensor,    sensorEV3_Ultrasonic)
#pragma config(Motor,  motorA,          armMotor,      tmotorEV3_Large, PIDControl, encoder)
#pragma config(Motor,  motorB,          leftMotor,     tmotorEV3_Large, PIDControl, driveLeft, encoder)
#pragma config(Motor,  motorC,          rightMotor,    tmotorEV3_Large, PIDControl, driveRight, encoder)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//


task main()
{
	repeat (forever) {
		lineTrackLeft(S3, 50, 50, 0);
	}
}
</CSource>
